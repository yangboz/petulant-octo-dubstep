<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" xmlns:components="views.components.*"
				>
	
	<fx:Script>
		<![CDATA[
			
			import model.AppData;
			
			import mx.events.FlexEvent;
			/*
			import views.components.ImageWithBorder;
			
			private var id_image:ImageWithBorder = null;
			
			protected function id_image_completeHandler(event:Event):void
			{
				this.id_image.x = data.x;
				this.id_image.y = data.y;
				this.id_image.scaleX = data.sX;
				this.id_image.scaleY = data.sY;
//				this.id_image.rotation = data.r;
			}
			
			override public function set data( value:Object ) : void 
			{
				if(value)
				{
					if(this.id_image)
					{
						this.id_group.removeElement(id_image);
						this.id_image = null;
					}
					id_image = new ImageWithBorder();
					this.id_group.addElement(id_image);
					//
					id_image.source = value.source;
					id_image.addEventListener(Event.COMPLETE,id_image_completeHandler);
					id_image.setStyle("horizontalAlign","left");
					id_image.setStyle("verticalAlign","top");
				}
				super.data  = value;
			}
			*/
		]]>
	</fx:Script>
	
	
	<!--<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
	</s:states>-->
	
	<!--<s:postLayoutTransformOffsets>
		<mx:TransformOffsets id="offsets" x.hovered="-25" y.hovered="-50" scaleX.hovered="2" scaleY.hovered="2" />
	</s:postLayoutTransformOffsets>    
	
	<s:transitions>
		<mx:Transition fromState="normal" toState="hovered" autoReverse="true">
			<s:Animate target="{offsets}" duration="300">
				<s:SimpleMotionPath property="scaleX" />
				<s:SimpleMotionPath property="scaleY" />
				<s:SimpleMotionPath property="x" />
				<s:SimpleMotionPath property="y" />
			</s:Animate>
		</mx:Transition>
		<mx:Transition fromState="hovered" toState="normal" autoReverse="true">
			<s:Animate target="{offsets}" duration="300">
				<s:SimpleMotionPath property="scaleX" />
				<s:SimpleMotionPath property="scaleY" />
				<s:SimpleMotionPath property="x" />
				<s:SimpleMotionPath property="y" />
			</s:Animate>
		</mx:Transition>
	</s:transitions>    -->
	<components:ImageWithBorder id="id_image" 
		source="{data.source}" scaleX="{data.sX}" scaleY="{data.sY}" rotation="{data.r}"
		borderAlpha="1"
		borderWidth="5"
		borderColor="black"
		x="{data.x}" y="{data.y}"
		horizontalCenter="0" verticalCenter="0" 
	/>
	<!--
	<s:Group id="id_group" clipAndEnableScrolling="true" width="{data.w}" height="{data.h}">
	<s:BorderContainer id="id_group" borderWeight="5" borderColor="black" borderVisible="true">
		
	<components:ImageWithBorder id="id_image" 
								source="{data.source}" scaleX="{data.sX}" scaleY="{data.sY}" rotation="{data.r}"
								borderAlpha="1"
								borderWidth="5"
								borderColor="0xffff00"
								x="{data.x}" y="{data.y}"
							    horizontalAlign="left" verticalAlign="top"
								/>
	<components:ImageAdjustRotate
		id="id_image" 
		source="{data.source}" scaleX="{data.sX}" scaleY="{data.sY}" rotation="{data.r}"
		x="{data.x}" y="{data.y}"
	    cachePolicy="off"
				 />
			<s:Image id="id_image" 
					 source="{data.source}" scaleX="{data.sX}" scaleY="{data.sY}" rotation="{data.r}"
					 x="{data.x}" y="{data.y}"
					 horizontalCenter="0" verticalCenter="0" 
					 />
		</s:BorderContainer>
		
	</s:Group>
	-->
</s:ItemRenderer>